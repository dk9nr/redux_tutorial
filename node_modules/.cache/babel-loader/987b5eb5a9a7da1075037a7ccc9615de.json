{"ast":null,"code":"var _jsxFileName = \"/Users/Dev/Desktop/redux_tutorial/src/js/components/Form.js\";\n// src/js/components/Form.js\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { addArticle } from \"../actions/index\";\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addArticle: article => dispatch(addArticle(article))\n  };\n}\n\nclass ConnectedForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const title = this.state.title;\n    this.props.addArticle({\n      title\n    });\n    this.setState({\n      title: \"\"\n    });\n  }\n\n  render() {\n    const title = this.state.title;\n    return React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Title\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"title\",\n      value: title,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"SAVE\"));\n  }\n\n}\n\nconst Form = connect(null, mapDispatchToProps)(ConnectedForm);\nexport default Form;","map":{"version":3,"sources":["/Users/Dev/Desktop/redux_tutorial/src/js/components/Form.js"],"names":["React","Component","connect","addArticle","mapDispatchToProps","dispatch","article","ConnectedForm","constructor","props","state","title","handleChange","bind","handleSubmit","event","setState","target","id","value","preventDefault","render","Form"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AACA,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACLF,IAAAA,UAAU,EAAEG,OAAO,IAAID,QAAQ,CAACF,UAAU,CAACG,OAAD,CAAX;AAD1B,GAAP;AAGD;;AACD,MAAMC,aAAN,SAA4BN,SAA5B,CAAsC;AACpCO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb;AAGA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AACDD,EAAAA,YAAY,CAACG,KAAD,EAAQ;AAClB,SAAKC,QAAL,CAAc;AAAE,OAACD,KAAK,CAACE,MAAN,CAAaC,EAAd,GAAmBH,KAAK,CAACE,MAAN,CAAaE;AAAlC,KAAd;AACD;;AACDL,EAAAA,YAAY,CAACC,KAAD,EAAQ;AAClBA,IAAAA,KAAK,CAACK,cAAN;AADkB,UAEVT,KAFU,GAEA,KAAKD,KAFL,CAEVC,KAFU;AAGlB,SAAKF,KAAL,CAAWN,UAAX,CAAsB;AAAEQ,MAAAA;AAAF,KAAtB;AACA,SAAKK,QAAL,CAAc;AAAEL,MAAAA,KAAK,EAAE;AAAT,KAAd;AACD;;AACDU,EAAAA,MAAM,GAAG;AAAA,UACCV,KADD,GACW,KAAKD,KADhB,CACCC,KADD;AAEP,WACE;AAAM,MAAA,QAAQ,EAAE,KAAKG,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,EAAE,EAAC,OAFL;AAGE,MAAA,KAAK,EAAEH,KAHT;AAIE,MAAA,QAAQ,EAAE,KAAKC,YAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,EAUE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF,CADF;AAcD;;AAlCmC;;AAoCtC,MAAMU,IAAI,GAAGpB,OAAO,CAClB,IADkB,EAElBE,kBAFkB,CAAP,CAGXG,aAHW,CAAb;AAIA,eAAee,IAAf","sourcesContent":["// src/js/components/Form.js\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { addArticle } from \"../actions/index\";\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addArticle: article => dispatch(addArticle(article))\n  };\n}\nclass ConnectedForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  handleChange(event) {\n    this.setState({ [event.target.id]: event.target.value });\n  }\n  handleSubmit(event) {\n    event.preventDefault();\n    const { title } = this.state;\n    this.props.addArticle({ title });\n    this.setState({ title: \"\" });\n  }\n  render() {\n    const { title } = this.state;\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <div>\n          <label htmlFor=\"title\">Title</label>\n          <input\n            type=\"text\"\n            id=\"title\"\n            value={title}\n            onChange={this.handleChange}\n          />\n        </div>\n        <button type=\"submit\">SAVE</button>\n      </form>\n    );\n  }\n}\nconst Form = connect(\n  null,\n  mapDispatchToProps\n)(ConnectedForm);\nexport default Form;"]},"metadata":{},"sourceType":"module"}